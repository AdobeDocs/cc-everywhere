{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/ccx_editor/create_project/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,8DADR,gEAGA,wLAAyK,uBAAYC,WAAW,KAAvB,WAAzK,gDACA,eACE,GAAM,gBADR,mBAGA,0BAAW,cAAGA,WAAW,IACrB,KAAQ,4CADD,gBAAX,wBAEiD,uBAAYA,WAAW,KAAvB,kBAFjD,6DAGA,eACE,GAAM,QADR,UAGA,oBACE,eAAIA,WAAW,MAAf,kBAAsC,uBAAYA,WAAW,MAAvB,kBAAtC,sFACA,eAAIA,WAAW,MAAf,kGACA,eAAIA,WAAW,MAAf,0IAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,+lBAyBL,eACE,GAAM,uBACL,cAAGA,WAAW,KACb,KAAQ,6DADT,wBAGH,mBAAG,uBAAYA,WAAW,KAAvB,kBAAH,oCAAiG,uBAAYA,WAAW,KAAvB,sBAAjG,mBACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QADX,aAGA,eAAIA,WAAW,KACb,MAAS,QADX,gBAGA,eAAIA,WAAW,KACb,MAAS,QADX,WAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QADX,gBAGA,eAAIA,WAAW,KACb,MAAS,QADX,gCAGA,eAAIA,WAAW,KACb,MAAS,SACR,cAAGA,WAAW,KACb,KAAQ,wDADT,kBAIL,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QADX,gBAGA,eAAIA,WAAW,KACb,MAAS,QADX,mEAGA,eAAIA,WAAW,KACb,MAAS,SACR,cAAGA,WAAW,KACb,KAAQ,4DADT,wBAIL,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QADX,iBAGA,eAAIA,WAAW,KACb,MAAS,QADX,0BAGA,eAAIA,WAAW,KACb,MAAS,SACR,cAAGA,WAAW,KACb,KAAQ,4DADT,sBAIL,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QADX,cAGA,eAAIA,WAAW,KACb,MAAS,QADX,uBAGA,eAAIA,WAAW,KACb,MAAS,SACR,cAAGA,WAAW,KACb,KAAQ,sDADT,kBAST,4CAA6B,uBAAYA,WAAW,KAAvB,sBAA7B,oBACA,eACE,GAAM,WADR,YAGA,eACE,GAAM,gDADR,oDAGA,oBACE,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,kBAA5B,mCAA0H,uBAAYA,WAAW,MAAvB,wBAA1H,OACA,eAAIA,WAAW,MAAf,4DAEF,eACE,GAAM,gDADR,oDAGA,oBACE,eAAIA,WAAW,MAAf,0EAA8F,uBAAYA,WAAW,MAAvB,WAA9F,wBAA0K,cAAGA,WAAW,KACpL,KAAQ,0CAD8J,gBAA1K,eAGA,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,aAA5B,2EAA6J,uBAAYA,WAAW,MAAvB,iBAA7J,uBAA8O,mBAAQA,WAAW,MAAnB,8BAA9O,SAAsT,mBAAQA,WAAW,MAAnB,qCAAtT,MACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,sDAA0E,uBAAYA,WAAW,MAAvB,mBAA1E,+HAAqQ,uBAAYA,WAAW,MAAvB,gBAArQ,SAIN,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,m3DA4DL,0HAA2G,cAAGA,WAAW,IACrH,KAAQ,4BAD+F,iCAA3G,gCAOJJ,EAAWK,gBAAiB","file":"component---src-pages-guides-ccx-editor-create-project-index-md-4a3b4600beb0fe10019d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creative-cloud-express-editor-component-create-new-project\"\n    }}>{`Creative Cloud Express Editor Component: Create New Project`}</h1>\n    <p>{`This guide will demonstrate how to launch a Creative Cloud Express editor component. The editor will appear in an iframe and open a new project in a folder named `}<inlineCode parentName=\"p\">{`appName`}</inlineCode>{`, as specified when the SDK is initialized.`}</p>\n    <h2 {...{\n      \"id\": \"createdesign\"\n    }}>{`createDesign()`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"../../../reference/index.md#cceverywhere\"\n      }}>{`CCEverywhere`}</a>{` object exposes the `}<inlineCode parentName=\"p\">{`createDesign()`}</inlineCode>{` method, which loads the editor component in an iframe. `}</p>\n    <h4 {...{\n      \"id\": \"flow\"\n    }}>{`Flow:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`User triggers `}<inlineCode parentName=\"li\">{`createDesign()`}</inlineCode>{` function from within the host application, and an editor is loaded in an iframe.`}</li>\n      <li parentName=\"ul\">{`A pop-up window will appear and the user has to create or log into their CC Express account. `}</li>\n      <li parentName=\"ul\">{`Any projects are automatically created/saved in a new project folder ('app_name' specified in SDK initialization) within CC Express.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Initialize SDK and save CCEverywhere object as ccEverywhere \nccEverywhere.createDesign(\n    // CreateDesignParams\n    {\n        modalParams: {},\n        callbacks: {\n            onCancel: () => {},\n            onError: (err) => {},\n            onLoadStart: () => {},\n            onLoad: () => {},\n            onPublishStart: () => {},\n            onPublish: (publishParams) => {},\n        },\n        outputParams: { \n            outputType: \"base64\"\n        },\n        inputParams: { \n            canvasAspectId: \"1:2\",\n            templateType: \"Flyers\",\n        }\n    }\n); \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"createdesignparams\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../../../reference/ccx_editor/index.md#createdesignparams\"\n      }}>{`CreateDesignParams`}</a></h3>\n    <p><inlineCode parentName=\"p\">{`createDesign()`}</inlineCode>{` takes an object of parameters, `}<inlineCode parentName=\"p\">{`CreateDesignParams`}</inlineCode>{`, composed of:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`modalParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Define size of editor modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#modalparams\"\n            }}>{`ModalParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`inputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Specify template layout ratio, template types, template search`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/ccx_editor/index.md#createinputparams\"\n            }}>{`CreateInputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`outputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Configure output type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#ccxoutputparams\"\n            }}>{`CCXOutputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`callbacks`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Callback functions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#callbacks\"\n            }}>{`Callbacks`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* todo: confirm this is true:  */\n    }\n    <p>{`All the properties in `}<inlineCode parentName=\"p\">{`CreateDesignParams`}</inlineCode>{` are optional. `}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <h4 {...{\n      \"id\": \"step-1-user-clicks-the-create-project-button\"\n    }}>{`Step 1: User clicks the \"Create project\" button`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`createDesign()`}</inlineCode>{` function is called and passed `}<inlineCode parentName=\"li\">{`createDesignCallback`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`An Express editor component is launched in an iframe. `}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"step-2-user-completes-design-and-clicks-save\"\n    }}>{`Step 2: User completes design and clicks \"Save\"`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`The project is saved to the user's Express account in project folder (`}<inlineCode parentName=\"li\">{`appName`}</inlineCode>{`) designated in the `}<a parentName=\"li\" {...{\n          \"href\": \"../../../reference/index.md#initialize\"\n        }}>{`initialize()`}</a>{` function.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`onPublish`}</inlineCode>{` callback function is called. It passes the host application an object `}<inlineCode parentName=\"li\">{`publishParams`}</inlineCode>{` that includes the `}<strong parentName=\"li\">{`CCX project ID (projectId)`}</strong>{` and `}<strong parentName=\"li\">{`image data representation (asset)`}</strong>{`. `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The asset is saved and displayed in the image tag `}<inlineCode parentName=\"li\">{`image-container`}</inlineCode>{`. The associated project ID is also saved in a global variable so that we can pre-load it in an editor component later via `}<inlineCode parentName=\"li\">{`editDesign()`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Create Project Sample</title>\n  </head>  \n  <body>\n    <button id=\"create-project-button\">Create project</button>\n    <img id=\"image-container\" height=\"420\" width=\"420\" />\n\n    <script type=\"text/javascript\" src=\"./CCEverywhere.js\"></script>\n    <script type=\"text/javascript\">\n\n    /* Initialize projectId to null until it gets set by onPublish callback */\n    var projectId = null;\n    /* Set to null until CCEverywhere object is initialized */\n    var ccEverywhere = null;\n    var imageContainer = document.getElementById(\"image-container\");\n    const createButton = document.getElementById(\"create-project-button\");\n        \n    ccEverywhere = CCEverywhere.default.initialize(\n        {\n            clientId: YOUR_CLIENT_ID,\n            appName: PROJECT_NAME,\n            appVersion: { major: 1, minor: 0 },\n            platformCategory: 'web', \n            redirectUri: YOUR_REDIRECT_URI\n        }\n    );\n\n    createButton.onclick = () => {\n        const createDesignCallback = {\n            onCancel: () => {},\n            onPublish: (publishParams) => {\n                /* User clicked \"Save\"\n                   Save image data to render in sample\n                   Save projectId for editing later */\n                const localData = { \n                    project: publishParams.projectId, \n                    image: publishParams.asset.data \n                };\n                imageContainer.src = localData.image;\n                projectId = localData.project; \n            },\n            onError: (err) => {\n                console.error('Error received is', err.toString());\n            },\n        };\n    \n        ccEverywhere.createDesign(\n            {\n                callbacks: createDesignCallback\n            }\n        );  \n    }\n    </script>\n  </body> \n</html>\n`}</code></pre>\n    <p>{`Now that you have created a project and rendered the final design onto your own page, let's explore `}<a parentName=\"p\" {...{\n        \"href\": \"../edit_project/index.md\"\n      }}>{`loading pre-existing projects`}</a>{` into a CC Express editor. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}