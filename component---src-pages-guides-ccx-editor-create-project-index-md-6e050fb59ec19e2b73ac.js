(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[986],{38457:function(e,n,a){"use strict";a.r(n),a.d(n,{_frontmatter:function(){return d},default:function(){return p}});var t=a(22122),r=a(19756),i=(a(15007),a(64983)),o=a(99536),l=["components"],d={},c={_frontmatter:d},m=o.Z;function p(e){var n=e.components,a=(0,r.Z)(e,l);return(0,i.mdx)(m,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"creating-new-project"},"Creating New Project"),(0,i.mdx)("p",null,"This guide will demonstrate how to launch a CCX editor with a new project."),(0,i.mdx)("h2",{id:"createdesign"},"createDesign()"),(0,i.mdx)("p",null,"You can launch a CCX editor with a new project, using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"createDesign()")," method. "),(0,i.mdx)("p",null,"Flow: "),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"User triggers ",(0,i.mdx)("inlineCode",{parentName:"li"},"createDesign()")," function from within your application, and a CCX editor is loaded in an iframe."),(0,i.mdx)("li",{parentName:"ul"},"A pop-up window will appear and the user has to create or log into their CCX account. "),(0,i.mdx)("li",{parentName:"ul"},"Any projects are automatically created/saved in a new project folder ('app_name' specified in SDK initialization) within CCX.")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"createDesign(createDesignParams: CreateDesignParams) => void\n")),(0,i.mdx)("p",null,"This function takes an object of parameters, ",(0,i.mdx)("inlineCode",{parentName:"p"},"createDesignParams"),", composed of:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"../../../reference/shared_types/index.md#modalparams"},"modalParams"),": determines size of CCX editor modal"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"../../../reference/ccx_editor/index.md#createinputparams"},"inputParams")," canvasAspectId, template types, template search"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"../../../reference/shared_types/index.md#ccxoutputparams"},"outputParams"),": output type"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("a",{parentName:"li",href:"../../../reference/shared_types/index.md#callbacks"},"callbacks")," ")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},'// Initialize SDK and save CCEverywhere object as ccEverywhere \nccEverywhere.createDesign(\n    {\n        modalParams: {},\n        callbacks: {\n            onCancel: () => {},\n            onError: (err) => {},\n            onLoadStart: () => {},\n            onLoad: () => {},\n            onPublishStart: () => {},\n            onPublish: (publishParams) => {},\n        },\n        outputParams: { \n            outputType: "base64"\n        },\n        inputParams: { \n            canvasAspectId: "1:2",\n            templateType: "Flyers",\n        }\n    }\n); \n')),(0,i.mdx)("p",null,"All the properties in ",(0,i.mdx)("inlineCode",{parentName:"p"},"CreateDesignParams")," are optional. You will probably want to add some code to your ",(0,i.mdx)("inlineCode",{parentName:"p"},"onPublish")," callback to send the image data and project ID information back to your own app. The longer example at the bottom demonstrates this. "),(0,i.mdx)("h2",{id:"example"},"Example"),(0,i.mdx)("p",null,'When the "createDesign" button is clicked, the CCX editor is launched in an iframe. '),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <title>Create Project Sample</title>\n  </head>  \n  <body>\n    <button id="create-project-button">Create project</button>\n    <img id="image-container" height="420" width="420" />\n\n    <script type="text/javascript" src="./CCEverywhere.js"><\/script>\n    <script type="text/javascript">\n\n    /* Initialize projectId to null until it gets set by onPublish callback */\n    var projectId = null;\n    /* Set to null until CCEverywhere object is initialized */\n    var ccEverywhere = null;\n    var imageContainer = document.getElementById("image-container");\n    const createButton = document.getElementById("create-project-button");\n        \n    ccEverywhere = CCEverywhere.default.initialize(\n        {\n            clientId: YOUR_CLIENT_ID,\n            appName: PROJECT_NAME,\n            appVersion: { major: 1, minor: 0 },\n            platformCategory: \'web\', \n            redirectUri: YOUR_REDIRECT_URI\n        }\n    );\n\n    createButton.onclick = () => {\n        const createDesignCallback = {\n            onCancel: () => {},\n            onPublish: (publishParams) => {\n                /* User clicked "Save"\n                   Save image data to render in sample\n                   Save projectId for editing later */\n                const localData = { \n                    project: publishParams.projectId, \n                    image: publishParams.asset.data \n                };\n                imageContainer.src = localData.image;\n                projectId = localData.project; \n            },\n            onError: (err) => {\n                console.error(\'Error received is\', err.toString());\n            },\n        };\n    \n        ccEverywhere.createDesign(\n            {\n                callbacks: createDesignCallback\n            }\n        );  \n    }\n    <\/script>\n  </body> \n</html>\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Notes"),":"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"When ",(0,i.mdx)("inlineCode",{parentName:"li"},"onPublish")," is called, we save the project ID in a global variable ",(0,i.mdx)("inlineCode",{parentName:"li"},"projectId")," so that we can pre-load it when invocating the Open Project API later."),(0,i.mdx)("li",{parentName:"ul"},'"imageContainer" is the ID of an image element, and its source tag is updated to reflect the created project, once saved. '),(0,i.mdx)("li",{parentName:"ul"},'"create-project-button" is the ID of a button element, and click events on this button launch the editor.')),(0,i.mdx)("p",null,"Now that you have created a project and rendered the final design onto your own page, let's explore ",(0,i.mdx)("a",{parentName:"p",href:"../edit_project/index.md"},"loading pre-existing projects")," into a CCX editor. "))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-ccx-editor-create-project-index-md-6e050fb59ec19e2b73ac.js.map