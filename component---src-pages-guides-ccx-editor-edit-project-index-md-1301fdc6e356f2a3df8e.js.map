{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/ccx_editor/edit_project/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,4BADR,6BAGA,wHACA,eACE,GAAM,cADR,iBAGA,sFAAuE,uBAAYC,WAAW,KAAvB,gBAAvE,cACA,6BACA,oBACE,eAAIA,WAAW,MAAf,wCAA4D,uBAAYA,WAAW,MAAvB,WAA5D,iBAAiI,uBAAYA,WAAW,MAAvB,iBAAjI,cAAyM,uBAAYA,WAAW,MAAvB,aAAzM,gBACA,eAAIA,WAAW,MAAf,yEAA6F,uBAAYA,WAAW,MAAvB,oBAA7F,OAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,8DAIL,mEAAoD,uBAAYA,WAAW,KAAvB,oBAApD,mBAIA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wDADQ,eAApB,0CAGA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0DADQ,eAApB,gBAGA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4DADQ,gBAApB,kBAGA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sDADQ,aAApB,OAIF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,iiBAuBL,oDAAqC,uBAAYA,WAAW,KAAvB,yBAArC,MACA,eACE,GAAM,WADR,YAGA,wGACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,szDA8DTJ,EAAWK,gBAAiB","file":"component---src-pages-guides-ccx-editor-edit-project-index-md-1301fdc6e356f2a3df8e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"editing-existing-project\"\n    }}>{`Editing Existing Project`}</h1>\n    <p>{`This guide will show you how to launch a CCX editor with an existing project already loaded in.  `}</p>\n    <h2 {...{\n      \"id\": \"editdesign\"\n    }}>{`editDesign()`}</h2>\n    <p>{`You can launch a CCX editor with an existing project, using the `}<inlineCode parentName=\"p\">{`editDesign()`}</inlineCode>{` method. `}</p>\n    <p>{`Flow: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`A CCX project ID is returned in the `}<inlineCode parentName=\"li\">{`project`}</inlineCode>{` property of `}<inlineCode parentName=\"li\">{`publishParams`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`onPublish`}</inlineCode>{` callback. `}</li>\n      <li parentName=\"ul\">{`To launch the editor, you must pass the associated CCX project ID to `}<inlineCode parentName=\"li\">{`editDesignParams`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`editDesign(editDesignParams: EditDesignParams) => void\n`}</code></pre>\n    <p>{`This function takes an object of parameters, `}<inlineCode parentName=\"p\">{`editDesignParams`}</inlineCode>{`, composed of:`}</p>\n    {\n      /* TODO: fix reference links */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../reference/shared_types/index.md#modalparams\"\n        }}>{`modalParams`}</a>{`: determines size of CCX editor modal`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../reference/ccx_editor/index.md#editinputparams\"\n        }}>{`inputParams`}</a>{`: projectId`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../reference/shared_types/index.md#ccxoutputparams\"\n        }}>{`outputParams`}</a>{`: output type`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../reference/shared_types/index.md#callbacks\"\n        }}>{`callbacks`}</a>{` `}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Initialize SDK and save CCEverywhere object as ccEverywhere \nccEverywhere.editDesign(\n    {\n        inputParams: { \n            projectId: CCX_PROJECT_ID \n        },\n        callbacks: {\n            onCancel: () => {},\n            onError: (err) => {},\n            onLoadStart: () => {},\n            onLoad: () => {},\n            onPublishStart: () => {},\n            onPublish: (publishParams) => {},\n        },\n        modalParams: {},\n        outputParams: { \n            outputType: \"base64\"\n        },\n    }\n);\n`}</code></pre>\n    <p>{`The only required property is `}<inlineCode parentName=\"p\">{`inputParams.projectId`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`When the \"editButton\" button is clicked, the CCX editor is launched in an iframe.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Edit Project Sample</title>\n  </head>  \n  <body>\n    <button id=\"edit-project-button\">Edit project</button>\n    <img id=\"image-container\" height=\"420\" width=\"420\" />\n\n    <script type=\"text/javascript\" src=\"./CCEverywhere.js\"></script>\n    <script type=\"text/javascript\">\n    /* Set to null until CCEverywhere object is initialized */\n    var ccEverywhere = null;\n    var projectId = <set by createDesign onPublish earlier>\n    var imageContainer = document.getElementById(\"image-container\");\n\n    const editButton = document.getElementById(\"edit-project-button\");\n\n    ccEverywhere = CCEverywhere.default.initialize(\n        {\n            clientId: YOUR_CLIENT_ID\n            appName: PROJECT_NAME,\n            appVersion: { major: 1, minor: 0 },\n            platformCategory: 'web', \n            redirectUri: YOUR_REDIRECT_URI\n        }\n    );\n\n    editButton.onclick = () => {\n        const editDesignCallback = {\n            onCancel: () => {},\n            onPublish: (publishParams) => {\n            /* User clicked \"Save\" - done modifying project.\n            Save modified image data and projectId */\n                const localData = { \n                    project: publishParams.projectId, \n                    image: publishParams.asset.data \n                };\n                imageContainer.src = localData.image;\n                projectId = localData.project;\n            },\n            onError: (err) => {\n                console.error('Error received is', err.toString());\n            },\n        };\n        ccEverywhere.editDesign(\n            {\n                inputParams: { projectId: projectId },\n                callbacks: editDesignCallback\n            }\n        );\n    }\n    </script>\n  </body> \n</html>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}