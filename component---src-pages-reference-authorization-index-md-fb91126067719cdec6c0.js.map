{"version":3,"file":"component---src-pages-reference-authorization-index-md-fb91126067719cdec6c0.js","mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iBADR,kBAGA,0HAA2G,mBAAQC,WAAW,KAAnB,iCAA3G,+CAA2N,mBAAQA,WAAW,KAAnB,iBAA3N,2BACA,eACE,GAAM,YADR,aAGA,6HAA8G,uBAAYA,WAAW,KAAvB,8BAA9G,kIACA,0EACA,oBACE,eAAIA,WAAW,MAAf,aAAiC,uBAAYA,WAAW,MAAvB,iBAAjC,yGAAoM,uBAAYA,WAAW,MAAvB,kBAApM,OACA,eAAIA,WAAW,MAAf,oFAAwG,uBAAYA,WAAW,MAAvB,kBAAxG,MACA,eAAIA,WAAW,MAAf,0IAC6D,mBAAQA,WAAW,MAAnB,aAD7D,0EAGF,eACE,GAAM,8BADR,+BAGA,4HAA6G,cAAGA,WAAW,IACvH,KAAQ,uCADiG,qBAA7G,+HAGA,mTACA,gDAAiC,cAAGA,WAAW,IAC3C,KAAQ,+DADqB,UAAjC,gBAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,wCAApB,yCAGA,eAAIA,WAAW,MAAf,+EAEF,wIAAyH,mBAAQA,WAAW,KAAnB,QAAzH,oNACA,eACE,GAAM,iBADR,kBAGA,+BAAgB,uBAAYA,WAAW,KAAvB,8BAAhB,qJACA,eACE,GAAM,4BADR,+BAGA,gEAAiD,uBAAYA,WAAW,KAAvB,QAAjD,aAA8G,uBAAYA,WAAW,KAAvB,iBAA9G,wBAA+L,mBAAQA,WAAW,KAAnB,eAA/L,8GACA,0NAA2M,uBAAYA,WAAW,KAAvB,iBAA3M,oDAKJJ,EAAWK,gBAAiB","sources":["webpack://dev-site-documentation-template/./src/pages/reference/authorization/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"authorization\"\n    }}>{`Authorization`}</h1>\n    <p>{`This SDK follows the Proof Key for Code Exchange (PKCE) OAuth flow.  Developers are responsible for `}<strong parentName=\"p\">{`registering OAuth credentials`}</strong>{` in Developer Console and implementing the `}<strong parentName=\"p\">{`code exchange`}</strong>{` portion of the flow. `}</p>\n    <h2 {...{\n      \"id\": \"redirect\"\n    }}>{`Redirect`}</h2>\n    <p>{`When the SDK is first called, the user is prompted to sign-in to their Adobe account. The IMS library (`}<inlineCode parentName=\"p\">{`imslib-thin_node_module.js`}</inlineCode>{`) helps handle signing users in and out of their Adobe accounts. It will be bundled with the SDK once it is hosted on a CDN. `}</p>\n    <p>{`Here are the OAuth steps it handles on the backend:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A unique `}<inlineCode parentName=\"li\">{`code_verifier`}</inlineCode>{` is created (then saved to the browser's session storage) and used by the IMS library to generates a `}<inlineCode parentName=\"li\">{`code_challenge`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`The IMS library makes a GET request to the IMS authorization endpoint with this `}<inlineCode parentName=\"li\">{`code_challenge`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`The client is identified, and the user is prompted to authenticate.\nIf the user accepts, the pop-up window closes and the IMS server `}<strong parentName=\"li\">{`redirects`}</strong>{` the user back to registered redirect URI with an authorization code`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"register-oauth-credentials\"\n    }}>{`Register OAuth Credentials`}</h3>\n    <p>{`OAuth credentials are required when first creating an integration, but they can be modified later. In `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/console\"\n      }}>{`Developer Console`}</a>{`, navigate to the project you created. You can edit credentials by navigating to \"Credentials\" > \"OAuth Single-Page App\". `}</p>\n    <p>{`The redirect URL(s) you define here must correspond with the URL(s) to which the IMS server will redirect after authorization has been granted by the user. IMS will check the \"Redirect URI Patterns\" field first. If there are no matches, it will default to the \"Default Redirect URI\". `}</p>\n    <p>{`If you'd like to test the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cc-everywhere/tree/main/sample\"\n      }}>{`sample`}</a>{`, specify: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://127.0.0.1:8000/redirect.html\"\n        }}>{`https://127.0.0.1:8000/redirect.html`}</a>{` in the \"Default Redirect URI\" field`}</li>\n      <li parentName=\"ul\">{`https://localhost:8000/redirect.html in the \"Redirect URI Patterns\" field`}</li>\n    </ul>\n    <p>{`Integrations must be submitted with https redirect URIs to be approved for production, but http URIs are accepted `}<strong parentName=\"p\">{`only`}</strong>{` for testing localhost instances. Note that the \"Default Redirect URI\" field will still expect a https pattern in Console, but including the http URI in the \"Redirect URI Patterns\" field will be sufficient. `}</p>\n    <h2 {...{\n      \"id\": \"code-exchange\"\n    }}>{`Code Exchange`}</h2>\n    <p>{`Call the `}<inlineCode parentName=\"p\">{`exchangeAuthCodeForToken()`}</inlineCode>{` method at your redirect URI to exchange the authorization code for an access token, so the user is not prompted to login again in this session.`}</p>\n    <h3 {...{\n      \"id\": \"exchangeauthcodefortoken\"\n    }}>{`exchangeAuthCodeForToken()`}</h3>\n    <p>{`This SDK provides this method to send the `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`code_verifier`}</inlineCode>{` to the IMS server. `}<strong parentName=\"p\">{`If verified`}</strong>{`, the IMS server responds with an access token and it is stored in session storage for future API calls. `}</p>\n    <p>{`This flow is secure because even if the authorization code is somehow intercepted, it cannot be exchanged for an access token without the verifier. For the sample we provide, you can see that the `}<inlineCode parentName=\"p\">{`redirect.html`}</inlineCode>{` page initializes the SDK and calls this method`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}