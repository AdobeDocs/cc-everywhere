{"version":3,"file":"component---src-pages-guides-quick-actions-image-index-md-43280f9cb8c9ce1722bb.js","mappings":"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","sources":["webpack://cc-everywhere/./src/pages/guides/quick_actions/image/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineAlert variant=\"warning\" slots=\"header, text1, text2\" mdxType=\"InlineAlert\" />\n    <p>{`IMPORTANT: Deprecation Warning`}</p>\n    <p>{`This version of the docs and SDK will be sunsetted later this year. As a result, we are no longer approving new submissions that integrate with v2.`}</p>\n    <p>{`Instead, we would love for you to start integrating the new version of the SDK. To join the private beta and get early access to documentation, please fill out `}<a parentName=\"p\" {...{\n        \"href\": \"https://airtable.com/shryiOk1VwoWxUCZs?prefill_Platform=Adobe%20Express%20Embed%20SDK&hide_Platform=true\"\n      }}>{`this form`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"image-quick-actions\"\n    }}>{`Image quick actions`}</h1>\n    <p>{`Each quick actions component is loaded into the host application as an iframe, like the full editor component. Image quick actions can be launched with a pre-selected asset (jpg/png). If no input asset is provided, the modal will automatically prompt the user to browse their device for an image file.`}</p>\n    <h2 {...{\n      \"id\": \"openquickaction\"\n    }}>{`openQuickAction()`}</h2>\n    <p>{`This API is responsible for embedding and launching the quick actions component in your application as an iframe.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`ccEverywhere.openQuickAction(\n    // QuickActionsParams\n    {\n        id: 'image-crop', \n        inputParams: {\n            exportOptions: []\n        },\n        callbacks: {\n            onCancel: () => {},\n            onError: (err) => {},\n            onLoadStart: () => {},\n            onLoad: () => {},\n            onPublishStart: () => {},\n            onPublish: (publishParams) => {},\n        },\n        modalParams: {},\n    }\n)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"quickactionparams\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../../../reference/quick_actions/index.md#quickactionparams\"\n      }}>{`QuickActionParams`}</a></h3>\n    <p><inlineCode parentName=\"p\">{`openQuickAction()`}</inlineCode>{` takes an object `}<inlineCode parentName=\"p\">{`QuickActionParams`}</inlineCode>{` with 4 parameters:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ID of quick action`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/quick_actions/index.md#quickactionid\"\n            }}>{`QuickActionId`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`inputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#asset\"\n            }}>{`Launch with asset`}</a>{` and `}<a parentName=\"td\" {...{\n              \"href\": \"../../../reference/quick_actions/index.md#exportoption\"\n            }}>{`export options`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/quick_actions/index.mdquickactioninputparams\"\n            }}>{`QuickActionInputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`callbacks`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Callback functions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#callbacks\"\n            }}>{`Callbacks`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`modalParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Define size of modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#modalparams\"\n            }}>{`ModalParams`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: `}<inlineCode parentName=\"p\">{`inputParams.exportOptions`}</inlineCode>{` determines which export buttons are exposed to the user once the action is complete, and must be defined with at least an empty array. If given an empty array, the \"Download\" button will be surfaced as an export option.`}</p>\n    <h3 {...{\n      \"id\": \"quickactionid\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../../../reference/quick_actions/index.md#quickactionid\"\n      }}>{`QuickActionId`}</a></h3>\n    <p>{`Identifies which image quick action component should be loaded into the iframe.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Quick Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`QuickActionId`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Crop Image`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'image-crop'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Convert to JPG`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'convert-to-jpg'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Convert to PNG`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'convert-to-png'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Resize Image`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'image-resize'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Remove Background`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'remove-background'`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <h4 {...{\n      \"id\": \"step-1a-user-uploads-an-image-asset-and-clicks-the-image-crop-button\"\n    }}>{`Step 1a: User uploads an image asset, and clicks the \"Image Crop\" button`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`After a user uploads an image, a FileReader object is instantiated and converts the file to a base64 data type and saves it to the variable \"imageUrl\".`}</li>\n      <li parentName=\"ul\">{`This `}<inlineCode parentName=\"li\">{`imageUrl`}</inlineCode>{` is passed as `}<inlineCode parentName=\"li\">{`inputParams.asset`}</inlineCode>{` when the `}<inlineCode parentName=\"li\">{`openQuickAction()`}</inlineCode>{` method is called.`}</li>\n      <li parentName=\"ul\">{`The image crop quick action component is launched in an iframe, and the user can crop the uploaded image as they wish.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"step-1b-user-clicks-the-image-crop-button-with-no-asset-attached\"\n    }}>{`Step 1b: User clicks the \"Image Crop\" button, with no asset attached`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`The image crop quick action component is launched in an iframe. The user will have to browse for an image asset to perform the image crop on.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"step-2-export-modified-asset\"\n    }}>{`Step 2: Export modified asset`}</h4>\n    <p>{`Finally, users can choose between 3 export options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Customize`}</strong>{`: to continue designing in a full editor component`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Download`}</strong>{`: to save the asset`}</li>\n      <li parentName=\"ul\">{`Custom button that targets host app`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n  <title>Quick actions</title>\n  </head>\n    \n  <body>\n    <h1> Image quick action example </h1>\n    <input type=\"file\" id=\"fileInput\" />\n    <img id=\"image-container\" height=\"420\" width=\"420\" />\n    <button id=\"image-crop\"> Crop image </button>\n\n    <script src=\"https://sdk.cc-embed.adobe.com/v2/CCEverywhere.js\"></script>\n    <script type=\"text/javascript\" >\n    \n    (async() => {\n        const ccEverywhere = await window.CCEverywhere.initialize({\n            clientId: YOUR_CLIENT_ID,\n            appName: YOUR_APP_NAME,\n            appVersion: { major: 1, minor: 0 },\n            platformCategory: 'web',\n            }\n        );\n        /* file: user uploaded file\n        imageUrl: base64 representation we pass into QA function */\n        var file, encodedImage;\n        /*  appImage is the image container displayed in sample */\n        var appImage = document.getElementById('image-container');\n\n        /* This event listener checks to see if the user uploaded a new file */\n        document.getElementById('fileInput')\n        .addEventListener('change', (e) => {\n            const reader = new FileReader();\n            file = e.target.files[0];\n            /* reads file into base 64 data type */\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                encodedImage = reader.result;\n            }\n            reader.onerror = (error) => {\n                console.log('error', error);\n            };\n        })\n\n        const exportOptions = [\n            /* Customize export button */\n            {\n                target: 'Editor',\n                variant: 'cta',\n                optionType: 'button',\n                buttonType: 'native'\n            },\n            /* Download export button */\n            {\n                target: 'Download',\n                variant: 'primary',\n                optionType: 'button',\n                buttonType: 'native'\n            },\n            /* Custom implementation in onPublish callback */\n            {\n                target: 'Host',\n                id: 'save-to-host-app',\n                label: 'Embed in app',\n                variant: 'cta',\n                optionType: 'button',\n                buttonType: 'custom'\n            }\n        ];\n\n        const callbacks = {\n            onCancel: () => {},\n            onPublish: (publishParams) => {\n                if(publishParams.exportButtonId==\"save-to-host-app\"){\n                    appImage.src = publishParams.asset.data;\n                    appImage.style.visibility=\"visible\";\n                }\n            },\n            onError: (err) => {\n                console.error('Error received is', err.toString())\n            }\n        }\n\n        document.getElementById('image-crop')\n        .addEventListener('click', () => {\n            ccEverywhere.openQuickAction({\n                id: 'image-crop', \n                inputParams: {\n                    asset: {\n                        data: encodedImage, \n                        dataType: 'base64', \n                        type: 'image'\n                    }, \n                    exportOptions: exportOptions\n                },\n                callbacks: callbacks,\n                modalParams: {},\n            })\n        })\n    })();\n    </script>\n  </body> \n</html>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}