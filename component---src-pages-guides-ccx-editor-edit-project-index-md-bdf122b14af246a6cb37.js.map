{"version":3,"file":"component---src-pages-guides-ccx-editor-edit-project-index-md-bdf122b14af246a6cb37.js","mappings":"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","sources":["webpack://cc-everywhere/./src/pages/guides/ccx_editor/edit_project/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobe-express-editor-component-edit-existing-adobe-express-project\"\n    }}>{`Adobe Express Editor Component: Edit Existing Adobe Express Project`}</h1>\n    <p>{`This guide will demonstrate how to launch a Express editor component. The editor will appear in an iframe, pre-loaded with a specified Adobe Express project.`}</p>\n    <h2 {...{\n      \"id\": \"editdesign\"\n    }}>{`editDesign()`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"../../../reference/index.md#cceverywhere\"\n      }}>{`CCEverywhere`}</a>{` object exposes the `}<inlineCode parentName=\"p\">{`editDesign()`}</inlineCode>{` method, which loads the Adobe Express editor component in an iframe, with an existing project pre-loaded.`}</p>\n    <h4 {...{\n      \"id\": \"flow\"\n    }}>{`Flow`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`User triggers `}<inlineCode parentName=\"li\">{`editDesign()`}</inlineCode>{` function from within the host application, and the Adobe Express editor is loaded in an iframe.`}</li>\n      <li parentName=\"ul\">{`To pre-load the editor with an existing project, you must pass the associated project ID to `}<inlineCode parentName=\"li\">{`editDesignParams`}</inlineCode>{`. This ID is returned in the `}<inlineCode parentName=\"li\">{`project`}</inlineCode>{` property of `}<inlineCode parentName=\"li\">{`publishParams`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`onPublish`}</inlineCode>{` callback.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Initialize SDK and save CCEverywhere object as ccEverywhere \nccEverywhere.editDesign(\n    {\n        inputParams: { \n            projectId: CCX_PROJECT_ID \n        },\n        callbacks: {\n            onCancel: () => {},\n            onError: (err) => {},\n            onLoadStart: () => {},\n            onLoad: () => {},\n            onPublishStart: () => {},\n            onPublish: (publishParams) => {},\n        },\n        modalParams: {},\n        outputParams: { \n            outputType: \"base64\"\n        },\n    }\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"editdesignparams\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../../../reference/ccx_editor/index.md#editdesignparams\"\n      }}>{`EditDesignParams`}</a></h3>\n    <p><inlineCode parentName=\"p\">{`editDesign()`}</inlineCode>{` takes an object of parameters, `}<inlineCode parentName=\"p\">{`editDesignParams`}</inlineCode>{`, composed of:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`modalParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Define size of editor modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#modalparams\"\n            }}>{`ModalParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`inputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Adobe Express project ID to initialize editor component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/ccx_editor/index.md#editinputparams\"\n            }}>{`EditInputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`outputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Configure output type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#ccxoutputparams\"\n            }}>{`CCXOutputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`callbacks`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Callback functions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/shared_types/index.md#callbacks\"\n            }}>{`Callbacks`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* todo: confirm there's not more:  */\n    }\n    <p>{`The only required property is `}<inlineCode parentName=\"p\">{`inputParams.projectId`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <h4 {...{\n      \"id\": \"step-1-user-clicks-the-edit-project-button\"\n    }}>{`Step 1: User clicks the \"Edit project\" button`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`editDesign()`}</inlineCode>{` function is called and passed `}<inlineCode parentName=\"li\">{`inputParams.projectId`}</inlineCode>{`, a set of callback functions in `}<inlineCode parentName=\"li\">{`editDesignCallback`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`An Adobe Express editor component is launched in an iframe, pre-loaded with that Adobe Express project.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"step-2-user-finishes-design-and-clicks-save\"\n    }}>{`Step 2: User finishes design and clicks \"Save\"`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`The project is again saved to the user's Adobe Express account in project folder `}<inlineCode parentName=\"li\">{`appName`}</inlineCode>{` as specified in the `}<a parentName=\"li\" {...{\n          \"href\": \"../../../reference/index.md#initialize\"\n        }}>{`initialize()`}</a>{` function.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`onPublish`}</inlineCode>{` callback function is called. It passes the host application an object `}<inlineCode parentName=\"li\">{`publishParams`}</inlineCode>{` that includes the `}<strong parentName=\"li\">{`Express project ID (projectId)`}</strong>{` and `}<strong parentName=\"li\">{`image data representation (asset)`}</strong>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The asset is saved and displayed in the image tag `}<inlineCode parentName=\"li\">{`image-container`}</inlineCode>{`. The associated project ID is also saved in a global variable so that we can pre-load it in an editor component later again via `}<inlineCode parentName=\"li\">{`editDesign()`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Edit Project Sample</title>\n  </head>  \n  <body>\n    <button id=\"edit-project-button\">Edit project</button>\n    <img id=\"image-container\" height=\"420\" width=\"420\" />\n\n    <script src=\"https://sdk.cc-embed.adobe.com/v1/CCEverywhere.js\"></script>\n    <script type=\"text/javascript\">\n    // projectId should be saved from an earlier call to createDesign\n    var projectId = SAVED_CCX_PROJECT_ID;\n    var imageContainer = document.getElementById(\"image-container\");\n    const editButton = document.getElementById(\"edit-project-button\");\n\n    (() => {\n        if (!window.CCEverywhere) {\n            return;\n        }\n        const ccEverywhere = window.CCEverywhere.initialize({\n            clientId: YOUR_CLIENT_ID,\n            appName: PROJECT_NAME,\n            appVersion: { major: 1, minor: 0 },\n            platformCategory: 'web', \n            redirectUri: YOUR_REDIRECT_URI\n        });\n    })();\n\n    editButton.addEventListener('click', () => {\n        const editDesignCallback = {\n            onCancel: () => {},\n            onPublish: (publishParams) => {\n                const localData = { project: publishParams.projectId, image: publishParams.asset.data };\n                imageContainer.src = localData.image;\n                projectId = localData.project;\n            },\n            onError: (err) => {\n                console.error('Error received is', err.toString());\n            },\n        };\n        ccEverywhere.editDesign(\n            {\n                inputParams: { projectId: projectId },\n                callbacks: editDesignCallback\n            }\n        );\n    });\n    </script>\n  </body> \n</html>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}