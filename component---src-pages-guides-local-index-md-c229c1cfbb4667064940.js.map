{"version":3,"file":"component---src-pages-guides-local-index-md-c229c1cfbb4667064940.js","mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,qBADR,sBAGA,mGACA,eACE,GAAM,uBADR,wBAGA,6EACA,oBACE,eAAIC,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,cACA,eAAIA,WAAW,MAAf,qDAEF,6OAA8N,cAAGA,WAAW,IACxO,KAAQ,wCADkN,WAA9N,MAGA,gDAAiC,cAAGA,WAAW,IAC3C,KAAQ,+DADqB,UAAjC,gBAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,wCAApB,yCAGA,eAAIA,WAAW,MAAf,+EAEF,eACE,GAAM,mCADR,qCAGA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,2IAA8J,cAAGA,WAAW,IACxK,KAAQ,mCADkJ,QAA9J,OAIF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,mEAAsF,cAAGA,WAAW,IAChG,KAAQ,qCAD0E,eAAtF,0BAKJ,eACE,GAAM,oBADR,qBAGA,wIAAyH,mBAAQA,WAAW,KAAnB,QAAzH,4SACA,oBACE,eAAIA,WAAW,MAAf,iIACA,eAAIA,WAAW,MAAf,YAAgC,uBAAYA,WAAW,MAAvB,eAAhC,KACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,eAApB,sDAAkI,uBAAYA,WAAW,MAAvB,aAAlI,OACA,eAAIA,WAAW,MAAf,qBAAyC,uBAAYA,WAAW,MAAvB,qBAAzC,QAA+G,uBAAYA,WAAW,MAAvB,4BAA/G,SAGJ,eAAIA,WAAW,MAAf,mDAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,4BAIL,eACE,GAAM,qBADR,sBAGA,0NACA,oBACE,eAAIA,WAAW,MAAf,mFAAuG,cAAGA,WAAW,KACjH,KAAQ,qCAD2F,eAAvG,oBAGA,eAAIA,WAAW,MAAf,2CAA+D,uBAAYA,WAAW,MAAvB,UAA/D,MACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0CACP,uBAAYA,WAAW,KAAvB,WAFL,uLAGA,eAAIA,WAAW,MAAf,qBAAyC,uBAAYA,WAAW,MAAvB,uBAAzC,UAAmH,uBAAYA,WAAW,MAAvB,sBAAnH,OACA,eAAIA,WAAW,MAAf,uDAA2E,uBAAYA,WAAW,MAAvB,mBAA3E,MACA,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,oBAA5B,wDAAiJ,uBAAYA,WAAW,MAAvB,qBAAjJ,eAA8N,uBAAYA,WAAW,MAAvB,iBAA9N,mIAGJ,eAAIA,WAAW,MAAf,YAAgC,uBAAYA,WAAW,MAAvB,eAAhC,KACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,eAApB,sDAAkI,uBAAYA,WAAW,MAAvB,aAAlI,OACA,eAAIA,WAAW,MAAf,qBAAyC,uBAAYA,WAAW,MAAvB,qBAAzC,QAA+G,uBAAYA,WAAW,MAAvB,4BAA/G,SAGJ,eAAIA,WAAW,MAAf,mDAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yEAQTJ,EAAWK,gBAAiB","sources":["webpack://dev-site-documentation-template/./src/pages/guides/local/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"local-development\"\n    }}>{`Local Development`}</h1>\n    <p>{`This guide contains the steps needed to begin testing your project locally. `}</p>\n    <h2 {...{\n      \"id\": \"domain-restrictions\"\n    }}>{`Domain Restrictions`}</h2>\n    <p>{`Adobe Create Embed SDK expects requests to come from: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`express.adobe.com`}</li>\n      <li parentName=\"ul\">{`localhost`}</li>\n      <li parentName=\"ul\">{`a domain that matches registered redirect URIs `}</li>\n    </ul>\n    <p>{`You cannot just download and embed the SDK in a HTML file on your local machine and open that file in a web browser. Any project using the SDK must be served via localhost or a redirect URI pattern you whitelist in `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/console/\"\n      }}>{`console`}</a>{`.`}</p>\n    <p>{`If you'd like to test the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cc-everywhere/tree/main/sample\"\n      }}>{`sample`}</a>{`, specify: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://127.0.0.1:8000/redirect.html\"\n        }}>{`https://127.0.0.1:8000/redirect.html`}</a>{` in the \"Default Redirect URI\" field`}</li>\n      <li parentName=\"ul\">{`https://localhost:8000/redirect.html in the \"Redirect URI patterns\" field`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-0-download-npm-or-homebrew\"\n    }}>{`Step 0: Download npm or Homebrew`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`npm is a package manager used for installing Node packages. Installing Node automatically installs npm: you can download the installer `}<a parentName=\"p\" {...{\n            \"href\": \"https://nodejs.org/en/download/\"\n          }}>{`here`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Homebrew is another package installer that you can use: follow `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.brew.sh/Installation\"\n          }}>{`these steps`}</a>{` to start using it.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"testing-via-http\"\n    }}>{`Testing via http`}</h2>\n    <p>{`Integrations must be submitted with https redirect URIs to be approved for production, but http URIs are accepted `}<strong parentName=\"p\">{`only`}</strong>{` for testing localhost instances. Note that the \"Default Redirect URI\" field will still expect a https pattern in Console, but including the http URI in the \"Redirect URI Patterns\" field will be sufficient. We have included some steps for getting started with a simple http server at port 8000: `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install npm or Homebrew. npm is installed when you install Node, and Homebrew is another package installer that you can use.`}</li>\n      <li parentName=\"ol\">{`Install `}<inlineCode parentName=\"li\">{`http-server`}</inlineCode>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`http-server`}</inlineCode>{` lets you make files or directories available via `}<inlineCode parentName=\"li\">{`localhost`}</inlineCode>{`. `}</li>\n          <li parentName=\"ul\">{`Install it using `}<inlineCode parentName=\"li\">{`npm i http-server`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`brew install http-server`}</inlineCode>{`. `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`Run the following line in your project root: `}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{` http-server -p 8000\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"testing-via-https\"\n    }}>{`Testing via https`}</h2>\n    <p>{`Your production server will need a public key and a signed certificate to enable https. To start trying out the SDK, we have included some steps for setting up a simple http server at port 8000: `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install Homebrew. Homebrew is the package installer we need for Step 2: follow `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.brew.sh/Installation\"\n        }}>{`these steps`}</a>{` to install it.`}</li>\n      <li parentName=\"ol\">{`Create a key and SSL certificate using `}<inlineCode parentName=\"li\">{`mkcert`}</inlineCode>{`. `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/FiloSottile/mkcert\"\n            }}><inlineCode parentName=\"a\">{`mkcert`}</inlineCode></a>{` is a simple tool for making locally-trusted development certificates. It automatically installs a local CA in the system root store, and generates locally-trusted certificates. `}</li>\n          <li parentName=\"ul\">{`Install it using `}<inlineCode parentName=\"li\">{`brew install mkcert`}</inlineCode>{`, NOT `}<inlineCode parentName=\"li\">{`npm install mkcert`}</inlineCode>{`. `}</li>\n          <li parentName=\"ul\">{`Configure a local certificate authority by running `}<inlineCode parentName=\"li\">{`mkcert -install`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`mkcert localhost`}</inlineCode>{` in the project root. This will generate two files: `}<inlineCode parentName=\"li\">{`localhost-key.pem`}</inlineCode>{` (key) and `}<inlineCode parentName=\"li\">{`localhost.pem`}</inlineCode>{` (certificate). Our https server is instantiated in the next step with these two files so that the browser trusts localhost.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`Install `}<inlineCode parentName=\"li\">{`http-server`}</inlineCode>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`http-server`}</inlineCode>{` lets you make files or directories available via `}<inlineCode parentName=\"li\">{`localhost`}</inlineCode>{`. `}</li>\n          <li parentName=\"ul\">{`Install it using `}<inlineCode parentName=\"li\">{`npm i http-server`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`brew install http-server`}</inlineCode>{`. `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`Run the following line in your project root: `}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{` http-server -S -C ./localhost.pem -K ./localhost-key.pem -p 8000\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}