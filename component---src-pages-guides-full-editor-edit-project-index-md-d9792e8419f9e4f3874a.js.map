{"version":3,"file":"component---src-pages-guides-full-editor-edit-project-index-md-d9792e8419f9e4f3874a.js","mappings":"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","sources":["webpack://cc-everywhere/./src/pages/guides/full_editor/edit_project/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"launching-existing-projects-in-the-full-editor\"\n    }}>{`Launching existing projects in the full editor`}</h1>\n    <InlineAlert variant=\"error\" slots=\"header, text\" mdxType=\"InlineAlert\" />\n    <p>{`IMPORTANT: Deprecation Warning`}</p>\n    <p>{`We are no longer approving integrations using v1 or v2 of the SDK - both versions will be deprecated in 2024.`}</p>\n    <p>{`This guide will demonstrate how to load a specific Adobe Express project in a full editor component.`}</p>\n    <h2 {...{\n      \"id\": \"edit\"\n    }}>{`edit()`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"../../../reference/index.md#cceverywhere\"\n      }}>{`CCEverywhere`}</a>{` object exposes the `}<inlineCode parentName=\"p\">{`editor`}</inlineCode>{` interface. It contains APIs which loads the editor component in an iframe. Use `}<inlineCode parentName=\"p\">{`edit()`}</inlineCode>{` to continue with an existing project in an embedded full editor.`}</p>\n    <h3 {...{\n      \"id\": \"flow\"\n    }}>{`Flow`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`User triggers `}<inlineCode parentName=\"li\">{`edit()`}</inlineCode>{` function from within the host application, and the full editor is loaded in an iframe.`}</li>\n      <li parentName=\"ul\">{`To pre-load the editor with an existing project, you must pass the associated project ID. This ID is returned in the `}<inlineCode parentName=\"li\">{`project`}</inlineCode>{` property of `}<inlineCode parentName=\"li\">{`publishParams`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`onPublish`}</inlineCode>{` callback.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { editor } = await ccEverywhere.initialize();\neditor.edit({\n    inputParams: { \n        projectId: CCX_PROJECT_ID \n    },\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"editdesignparams\"\n    }}>{`EditDesignParams`}</h3>\n    <p><inlineCode parentName=\"p\">{`edit()`}</inlineCode>{` takes an object of parameters, `}<inlineCode parentName=\"p\">{`EditDesignParams`}</inlineCode>{`, composed of:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`modalParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Define size of editor modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#modalparams\"\n            }}>{`ModalParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`inputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Adobe Express project ID to initialize editor component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/full_editor/index.md#editinputparams\"\n            }}>{`EditInputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`outputParams`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Configure output type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#ccxoutputparams\"\n            }}>{`CCXOutputParams`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`callbacks`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Callback functions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#callbacks\"\n            }}>{`Callbacks`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The only required property is `}<inlineCode parentName=\"p\">{`inputParams.projectId`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"editinputparams\"\n    }}>{`EditInputParams`}</h3>\n    <p><inlineCode parentName=\"p\">{`EditInputParams`}</inlineCode>{` is where you pass the associated projectId to launch in an editor component.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`projectId`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Project ID of the asset returned from `}<inlineCode parentName=\"td\">{`onPublish`}</inlineCode>{` callback when `}<inlineCode parentName=\"td\">{`createDesign`}</inlineCode>{` was invoked.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`editorPanelView`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#editorpanelview\"\n            }}>{`EditorPanelView`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Determines which panel view to open by default.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`exportOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#exportoptions\"\n            }}>{`ExportOptions`}</a>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Export options for the asset that is created. If no export options are specified, the editor falls back to the default layout options.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`panelSearchText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Search text to pass in the editor for selected panel.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`When a user completes their workflow in the editor, the associated `}<strong parentName=\"p\">{`projectId`}</strong>{` is sent back in `}<a parentName=\"p\" {...{\n        \"href\": \"../../../reference/types/index.md#publishparams\"\n      }}>{`publishParams`}</a>{` from the `}<inlineCode parentName=\"p\">{`onPublish`}</inlineCode>{` callback`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`edit`}</inlineCode>{` API takes a saved `}<inlineCode parentName=\"p\">{`projectId`}</inlineCode>{` as input and launches an `}<strong parentName=\"p\">{`existing`}</strong>{` project in the editor. When the user finishes in the editor and saves/publishes their design, the `}<inlineCode parentName=\"p\">{`onPublish`}</inlineCode>{` callback is invoked. Resulting project data is sent in `}<inlineCode parentName=\"p\">{`publishParams`}</inlineCode>{`. In this example, we save the project info (`}<inlineCode parentName=\"p\">{`project_id`}</inlineCode>{`) and display the image data (of the first page of the user's design) in some image container `}<inlineCode parentName=\"p\">{`image_data`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\",\n        \"metastring\": \"title=\\\"edit-project.js\\\" hl_lines=\\\"15\\\"\",\n        \"title\": \"\\\"edit-project.js\\\"\",\n        \"hl_lines\": \"\\\"15\\\"\"\n      }}>{`const editDesignCallback = {\n    onCancel: () => {},\n    onPublish: (publishParams) => {\n        const pageData = { project: publishParams.asset[0].projectId, image: publishParams.asset[0].data };\n        image_data.src = pageData.image;\n        project_id = pageData.project;\n    },\n    onError: (err) => {\n        console.error('Error received is', err.toString());\n    },\n};\neditor.edit(\n    {\n        inputParams: { \n            projectId: project_id \n        },\n        callbacks: editDesignCallback\n    }\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}