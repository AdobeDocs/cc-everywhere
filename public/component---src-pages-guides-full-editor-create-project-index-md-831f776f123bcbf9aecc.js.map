{"version":3,"file":"component---src-pages-guides-full-editor-create-project-index-md-831f776f123bcbf9aecc.js","mappings":"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","sources":["webpack://cc-everywhere/./src/pages/guides/full_editor/create_project/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/timkim/repo/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-new-projects-using-the-full-editor\"\n    }}>{`Creating new projects using the full editor`}</h1>\n    <p>{`This guide will demonstrate how to use the embedded full editor in your own application.`}</p>\n    <h2 {...{\n      \"id\": \"create\"\n    }}>{`create()`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`create`}</inlineCode>{` method starts the full editor workflow with an empty canvas.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(); \neditor.create(docConfig, appConfig, exportConfig, containerConfig); \n`}</code></pre>\n    <p>{`All the properties are optional.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`docConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/CCEverywhere/editor/index.md#createdocconfig\"\n            }}>{`CreateDocConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Pass a custom canvas size`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`appConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/CCEverywhere/editor/index.md#baseeditorappconfig\"\n            }}>{`BaseEditorAppConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Parameters to configure editor/modal UI`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`exportConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#exportoptions\"\n            }}>{`ExportOptions`}</a>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Configure export options. If no export options are specified, the editor falls back to the default layout options.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`containerConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#containerconfig\"\n            }}>{`ContainerConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Properties to configure the SDK container`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"createwithasset\"\n    }}>{`createWithAsset()`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`createWithAsset()`}</inlineCode>{` to launch the full editor with a pre-selected image or video asset.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(); \neditor.createWithAsset(docConfig, appConfig, exportConfig, containerConfig); \n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`docConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/CCEverywhere/editor/index.md#createwithassetdocconfig\"\n            }}>{`CreateWithAssetDocConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Pass an image and custom canvas size`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`appConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/CCEverywhere/editor/index.md#baseeditorappconfig\"\n            }}>{`BaseEditorAppConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Parameters to configure editor/modal UI`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`exportConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#exportoptions\"\n            }}>{`ExportOptions`}</a>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Configure export options. If no export options are specified, the editor falls back to the default layout options.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`containerConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#containerconfig\"\n            }}>{`ContainerConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Properties to configure the SDK container`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example-create-new-project\"\n    }}>{`Example: Create new project`}</h2>\n    <p>{`The following code will invoke the full editor. It appears in a modal. When the user finishes in the editor and saves/publishes their design, the `}<inlineCode parentName=\"p\">{`onPublish`}</inlineCode>{` callback is invoked. Resulting project data is sent in `}<inlineCode parentName=\"p\">{`publishParams`}</inlineCode>{`. In this example, we save the project info (`}<inlineCode parentName=\"p\">{`project_id`}</inlineCode>{`) and display the image data (of the first page of the user's design) in some image container `}<inlineCode parentName=\"p\">{`image_data`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\",\n        \"metastring\": \"title=\\\"create-new-project.js\\\"\",\n        \"title\": \"\\\"create-new-project.js\\\"\"\n      }}>{`// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(hostInfo); \n\nconst callbacks = {\n    onCancel: () => {},\n    onPublish: (intent,publishParams) => {\n        const localData = { project: publishParams.projectId, image: publishParams.asset[0].data };\n        updateImage(localData);\n    },\n    onError: (err) => {\n        console.error('Error received is', err.toString());\n    },\n};\n\nlet appConfig = { callbacks: callbacks}\n\nconst updateImage = (localData) => {\n    image_data.src = localData.image;\n    project_id = localData.project;\n}\n\neditor.create(appConfig);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-create-from-asset\"\n    }}>{`Example: Create from asset`}</h2>\n    <p>{`To launch the editor with a starting asset, the `}<inlineCode parentName=\"p\">{`createWithAsset`}</inlineCode>{` API takes a `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`inputParams`}</inlineCode>{`. When the user finishes in the editor and saves/publishes their design, the `}<inlineCode parentName=\"p\">{`onPublish`}</inlineCode>{` callback is invoked. Resulting project data is sent in `}<inlineCode parentName=\"p\">{`publishParams`}</inlineCode>{`. In this example, we save the project info (`}<inlineCode parentName=\"p\">{`project_id`}</inlineCode>{`) and display the image data (of the first page of the user's design) in some image container `}<inlineCode parentName=\"p\">{`image_data`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\",\n        \"metastring\": \"title=\\\"create-from-asset.js\\\" hl_lines=\\\"5\\\"\",\n        \"title\": \"\\\"create-from-asset.js\\\"\",\n        \"hl_lines\": \"\\\"5\\\"\"\n      }}>{`// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(hostInfo);\n\nconst callbacks = {\n    onCancel: () => {},\n    onPublish: (intent,publishParams) => {\n        const localData = { project: publishParams.projectId, image: publishParams.asset[0].data };\n        updateImage(localData);\n    },\n    onError: (err) => {\n        console.error('Error received is', err.toString());\n    },\n};\n\nlet appConfig = { callbacks: callbacks}\n\nconst updateImage = (localData) => {\n    image_data.src = localData.image;\n    project_id = localData.project;\n}\n \nlet docConfig = {\n    asset: {\n        data: base64Asset,\n        dataType: 'base64',\n        type: 'image' \n    }\n}\neditor.createWithAsset(docConfig, appConfig);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}