{"version":3,"file":"component---src-pages-v-4-index-md-dc0f5005efe01cdbaeba.js","mappings":"uRAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,qCACJ,sCACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,gCACJ,iCACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,gDAA+CX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,KAC9E,KAAQ,sDACN,iBAAqB,0BAC3BX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,8EAA6EX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAM,cAA2B,iDAAgDX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,KACpN,KAAQ,yBACN,OAAW,YAEnBX,EAAAA,EAAAA,KAAA,MACE,GAAM,gBACJ,iBACJA,EAAAA,EAAAA,KAAA,SAAI,8FAA6FA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC3G,KAAQ,qDACN,gBAAoB,aAC1BX,EAAAA,EAAAA,KAAA,SAAI,6BACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAM,UAAuB,wEACxEX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAM,eAA4B,gDAC7EX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAM,UAAuB,wEAE1EX,EAAAA,EAAAA,KAAA,MACE,GAAM,sBACJ,uBACJA,EAAAA,EAAAA,KAAA,SAAI,qBAAoBA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,gBAA6B,kBAAiBX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC5G,KAAQ,yEACN,YAAgB,qBAAoBX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACpD,KAAQ,iBACN,gBAAoB,mCAAkCX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACtE,KAAQ,qDACN,gBAAoB,aAC1BX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eACX,0JAONX,EAAAA,EAAAA,KAACL,EAAW,CAACiB,QAAQ,OAAOC,MAAM,QAAQH,QAAQ,iBAClDV,EAAAA,EAAAA,KAAA,SAAI,0DACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,YACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eACX,6VAiBNX,EAAAA,EAAAA,KAAA,SAAI,oGAGR,CAEAI,EAAWU,gBAAiB,C","sources":["webpack://cc-everywhere/./src/pages/v4/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/timkim/repo/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobe-express-embed-sdk-reference\"\n    }}>{`Adobe Express Embed SDK Reference`}</h1>\n    <h2 {...{\n      \"id\": \"embed-and-initialize-the-sdk\"\n    }}>{`Embed and initialize the SDK`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Follow the steps in the Quickstart Guide to `}<a parentName=\"li\" {...{\n          \"href\": \"../guides/quickstart/index.md#step-2-embed-the-sdk\"\n        }}>{`embed the SDK`}</a>{` in your application.`}</li>\n      <li parentName=\"ol\">{`After you have imported the SDK to your application, you need to call the `}<inlineCode parentName=\"li\">{`initialize`}</inlineCode>{` API first. View the full reference for that `}<a parentName=\"li\" {...{\n          \"href\": \"./initialize/index.md\"\n        }}>{`API`}</a>{` here.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"cceverywhere\"\n    }}>{`CCEverywhere`}</h3>\n    <p>{`Once you have successfully initialized the SDK, a Promise will be returned containing the `}<a parentName=\"p\" {...{\n        \"href\": \"./sdk/src/3p/CCEverywhere/classes/CCEverywhere.md\"\n      }}>{`CCEverywhere`}</a>{` object.`}</p>\n    <p>{`As of today, it exposes:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`editor`}</inlineCode>{`: Contains APIs for creating and editing in an embedded full editor`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`quickAction`}</inlineCode>{`: Contains APIs for launching quick actions`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`module`}</inlineCode>{`: Contains APIs for launching modules (Generate Image, edit image)`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"initialize-the-sdk\"\n    }}>{`Initialize the SDK`}</h3>\n    <p>{`The asynchronous `}<inlineCode parentName=\"p\">{`initialize()`}</inlineCode>{` method takes `}<a parentName=\"p\" {...{\n        \"href\": \"./shared/src/types/HostInfo.types/interfaces/HostInfoSpecifiedBase.md\"\n      }}>{`HostInfo`}</a>{` and an optional `}<a parentName=\"p\" {...{\n        \"href\": \"#configparams\"\n      }}>{`ConfigParams`}</a>{`, and returns a Promise with a `}<a parentName=\"p\" {...{\n        \"href\": \"./sdk/src/3p/CCEverywhere/classes/CCEverywhere.md\"\n      }}>{`CCEverywhere`}</a>{` object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`initialize: (\n    hostInfo:HostInfoSpecifiedBase, \n    configParams?:ConfigParamsBase, \n    authOption?:AuthOption) => Promise<CCEverywhere>;\n\n`}</code></pre>\n    {/* Inline Alert */}\n    <InlineAlert variant=\"info\" slots=\"text1\" mdxType=\"InlineAlert\" />\n    <p>{`The SDK should be initialized only once on each page.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`(async () => {\n  let hostInfo = { /* HostInfo */\n    clientId: CLIENT_ID,\n    appName: APP_NAME, \n    appVersion: { major: 1, minor: 0 }, \n    platformCategory: 'web',\n  }\n\n  const configParams = {\n    loginMode: 'delayed'\n  }\n\n  const ccEverywhere = await window.CCEverywhere.initialize(\n    hostInfo, configParams\n  );\n})();\n`}</code></pre>\n    <p>{`Use the left sidebar to navigate through the different components and APIs available in the SDK.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}