{"version":3,"file":"component---src-pages-guides-full-editor-edit-project-index-md-16ae1ecbfbeed2cf95d9.js","mappings":"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","sources":["webpack://cc-everywhere/./src/pages/guides/full_editor/edit_project/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"launching-existing-projects-in-the-full-editor\"\n    }}>{`Launching existing projects in the full editor`}</h1>\n    <p>{`This guide will demonstrate how to load a specific Adobe Express project in a full editor component.`}</p>\n    <h2 {...{\n      \"id\": \"edit\"\n    }}>{`edit()`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`edit`}</inlineCode>{` method lets you continue editing existing Express projects in the editor.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(); \neditor.edit(docConfig, appConfig, exportConfig, containerConfig); \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"editdesignparams\"\n    }}>{`EditDesignParams`}</h3>\n    <p><inlineCode parentName=\"p\">{`edit()`}</inlineCode>{` takes an object of parameters, `}<inlineCode parentName=\"p\">{`EditDesignParams`}</inlineCode>{`, composed of:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`docConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/CCEverywhere/editor/index.md#editdocconfig\"\n            }}>{`EditDocConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Pass the ID of the document to open`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`appConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/CCEverywhere/editor/index.md#baseeditorappconfig\"\n            }}>{`BaseEditorAppConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Parameters to configure editor/modal UI`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`exportConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#exportoptions\"\n            }}>{`ExportOptions`}</a>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Configure export options. If no export options are specified, the editor falls back to the default layout options.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`containerConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../../../reference/types/index.md#containerconfig\"\n            }}>{`ContainerConfig`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Properties to configure the SDK container`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`When a user completes their workflow in the editor, the associated `}<strong parentName=\"p\">{`projectId`}</strong>{` is sent back in `}<a parentName=\"p\" {...{\n        \"href\": \"../../../reference/types/index.md#publishparams\"\n      }}>{`publishParams`}</a>{` from the `}<inlineCode parentName=\"p\">{`onPublish`}</inlineCode>{` callback. The `}<inlineCode parentName=\"p\">{`edit()`}</inlineCode>{` method lets you use that identifier to revisit ongoing designs in the full editor.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`edit`}</inlineCode>{` API takes a saved `}<inlineCode parentName=\"p\">{`projectId`}</inlineCode>{` as input and launches an `}<strong parentName=\"p\">{`existing`}</strong>{` project in the editor. When the user finishes in the editor and saves/publishes their design, the `}<inlineCode parentName=\"p\">{`onPublish`}</inlineCode>{` callback is invoked. Resulting project data is sent in `}<inlineCode parentName=\"p\">{`publishParams`}</inlineCode>{`. In this example, we save the project info (`}<inlineCode parentName=\"p\">{`project_id`}</inlineCode>{`) and display the image data (of the first page of the user's design) in some image container `}<inlineCode parentName=\"p\">{`image_data`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\",\n        \"metastring\": \"title=\\\"edit-project.js\\\" hl_lines=\\\"15\\\"\",\n        \"title\": \"\\\"edit-project.js\\\"\",\n        \"hl_lines\": \"\\\"15\\\"\"\n      }}>{`const project_id = \"your_project_id\" // saved from publishParams callback\n\nlet docConfig = {\n    documentId: project_id\n};\nlet appConfig = {\n    selectedCategory: \"media\"\n}\neditor.edit(docConfig, appConfig);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}