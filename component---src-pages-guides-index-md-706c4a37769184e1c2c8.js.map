{"version":3,"file":"component---src-pages-guides-index-md-706c4a37769184e1c2c8.js","mappings":"yQAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,oBADR,qBAGA,+FACA,eACE,GAAM,yBADR,2BAGA,kDAAmC,cAAGC,WAAW,IAC7C,KAAQ,uCADuB,qBAAnC,0DAGA,kKAAmJ,cAAGA,WAAW,IAC7J,KAAQ,oCADuI,QAAnJ,OAGA,eACE,GAAM,oBADR,sBAGA,iCAAkB,cAAGA,WAAW,IAC5B,KAAQ,kDADM,WAAlB,8CAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,0EAIL,uCAAwB,cAAGA,WAAW,IAClC,KAAQ,sDADY,aAAxB,gDAGA,eACE,GAAM,uBADR,wBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,gPAYL,eACE,GAAM,gBADR,iBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,sFAKL,eACE,GAAM,kBADR,mBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,kVAcL,eACE,GAAM,6BADR,+BAGA,wHAAyG,uBAAYA,WAAW,KAAvB,gBAAzG,MACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,aAApB,oCACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,oFACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,6FAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,2TAeL,qCAAsB,uBAAYA,WAAW,KAAvB,gBAAtB,uCACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,qBAApB,8BACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,kBAApB,qCACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,qCACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,8BAApB,sBAEF,eACE,GAAM,gCADR,kCAGA,4BACE,cAAGA,WAAW,eAAa,mBAAQA,WAAW,KAAnB,QAA3B,6CAAgH,cAAGA,WAAW,IAC1H,KAAQ,oBADoG,kCAAhH,OAIF,uFAAwE,mBAAQA,WAAW,KAAnB,gBAAxE,mIACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,gDAIL,2JACA,eACE,GAAM,8BADR,gCAGA,kGAAmF,cAAGA,WAAW,IAC7F,KAAQ,yBADuE,UAAnF,oBAEuC,cAAGA,WAAW,IACjD,KAAQ,4BAD2B,kBAFvC,kFAKA,eACE,GAAM,6BACL,cAAGA,WAAW,KACb,KAAQ,oCADT,8BAGH,oBACE,eAAIA,WAAW,MAAf,WAA+B,cAAGA,WAAW,KACzC,KAAQ,wCADmB,oBAA/B,0BAGA,eAAIA,WAAW,MAAf,WAA+B,cAAGA,WAAW,KACzC,KAAQ,sCADmB,4BAA/B,2BAIF,wYACA,eACE,GAAM,mCACL,cAAGA,WAAW,KACb,KAAQ,uCADT,oCAGH,oBACE,eAAIA,WAAW,MAAf,WAA+B,cAAGA,WAAW,KACzC,KAAQ,kCADmB,6BAG/B,eAAIA,WAAW,MAAf,WAA+B,cAAGA,WAAW,KACzC,KAAQ,kCADmB,8BAIjC,qVAKJJ,EAAWK,gBAAiB","sources":["webpack://cc-everywhere/./src/pages/guides/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-guide\"\n    }}>{`Quickstart Guide`}</h1>\n    <p>{`This guide explains how to start using the SDK in your own application. `}</p>\n    <h2 {...{\n      \"id\": \"step-1-get-an-api-key\"\n    }}>{`Step 1: Get an API Key`}</h2>\n    <p>{`Create a new project in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/console\"\n      }}>{`Developer Console`}</a>{`. Select \"Add an API\" > \"Creative Cloud Everywhere\". `}</p>\n    <p>{`Then, choose \"Single-Page App\" and register your domain in the \"Redirect URI Patterns\" and \"Default Redirect URI\" fields. You can read more `}<a parentName=\"p\" {...{\n        \"href\": \"../guides/authorization/index.md\"\n      }}>{`here`}</a>{`. `}</p>\n    <h2 {...{\n      \"id\": \"step-2-embed-sdk\"\n    }}>{`Step 2: Embed SDK`}</h2>\n    <p>{`The latest `}<a parentName=\"p\" {...{\n        \"href\": \"https://sdk.cc-embed.adobe.com/v1/version.json\"\n      }}>{`version`}</a>{` of the SDK is available on Adobe's CDN: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`var CDN_URL = \"https://sdk.cc-embed.adobe.com/v1/CCEverywhere.js\";\n`}</code></pre>\n    <p>{`You can read the `}<a parentName=\"p\" {...{\n        \"href\": \"/cc-everywhere/src/pages/guides/changelog/index.md\"\n      }}>{`changelog`}</a>{` to understand what updates are being made.`}</p>\n    <h3 {...{\n      \"id\": \"load-via-script-tag\"\n    }}>{`Load via script tag`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<script src=\"https://sdk.cc-embed.adobe.com/v1/CCEverywhere.js\"></script>\n<script>\n  (() => {\n    if (!window.CCEverywhere) {\n      return;\n    }\n    const ccEverywhere = window.CCEverywhere.initialize();\n  })();\n</script>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-import\"\n    }}>{`Using import`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`await import(CDN_URL);\nconst ccEverywhere = window.CCEverywhere.initialize();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"dynamic-script\"\n    }}>{`Dynamic script`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`((document, url) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n    script.onload = () => {\n      if (!window.CCEverywhere) {\n          return;\n        }\n        const ccEverywhere = window.CCEverywhere.initialize();\n    };\n    document.body.appendChild(script);\n  })(document, CDN_URL);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-initialize-the-sdk\"\n    }}>{`Step 3: Initialize the SDK`}</h2>\n    <p>{`The SDK should only be initialized once each page. To initialize the SDK, pass the default method `}<inlineCode parentName=\"p\">{`initialize()`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CLIENT_ID`}</inlineCode>{` (string): API key from Console`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`APP_NAME`}</inlineCode>{` (string): Name of the Express folder created for end users of your integration`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`REDIRECT_URI`}</inlineCode>{` (string): Specify the redirect URI you registered for the project in Developer Console`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`(() => {\n    if (!window.CCEverywhere) {\n      return;\n    }\n    const ccEverywhere = window.CCEverywhere.initialize({\n      clientId: <CLIENT_ID>,\n      appName: <APP_NAME>, \n      appVersion: { major: 1, minor: 0 },\n      platformCategory: 'web',\n      redirectUri: <REDIRECT_URI>\n    });\n})();\n`}</code></pre>\n    <p>{`This returns a `}<inlineCode parentName=\"p\">{`CCEverywhere`}</inlineCode>{` Class object, with four methods: `}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`openQuickAction()`}</inlineCode>{`: Quick Actions Component`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`createDesign()`}</inlineCode>{`: Adobe Express Editor Component`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`editDesign()`}</inlineCode>{`: Adobe Express Editor Component`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`exchangeAuthCodeForToken()`}</inlineCode>{`: Authorization `}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"step-4-exchange-access-token\"\n    }}>{`Step 4: Exchange Access Token`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Note`}</strong>{`: To set up a local server, refer to the `}<a parentName=\"p\" {...{\n          \"href\": \"./local/index.md\"\n        }}>{`local development set-up guide`}</a>{` `}</p>\n    </blockquote>\n    <p>{`After a user logs in, they are redirected back to the designated `}<strong parentName=\"p\">{`redirect URL`}</strong>{` with an authorization code. At this redirect URL is hit, call the following method to exchange that code for an access token:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`ccEverywhere.exchangeAuthCodeForToken();\n`}</code></pre>\n    <p>{`The returned authorization code is exchanged for an access token, which is saved for future requests to the SDK during this session.`}</p>\n    <h2 {...{\n      \"id\": \"next-steps-explore-the-sdk\"\n    }}>{`Next Steps: Explore the SDK`}</h2>\n    <p>{`The Adobe Create Embed SDK can be initialized with a customized locale. The `}<a parentName=\"p\" {...{\n        \"href\": \"../../guides/index.md\"\n      }}>{`guides`}</a>{` along with the `}<a parentName=\"p\" {...{\n        \"href\": \"../../reference/index.md\"\n      }}>{`SDK references`}</a>{` can help you start working with the SDK in a way that best suits your needs.`}</p>\n    <h3 {...{\n      \"id\": \"express-editor-component\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../../guides/ccx_editor/index.md\"\n      }}>{`Express Editor Component`}</a></h3>\n    <ul>\n      <li parentName=\"ul\">{`How to `}<a parentName=\"li\" {...{\n          \"href\": \"../guides/ccx_editor/create_project/\"\n        }}>{`create a project`}</a>{` in an Express editor`}</li>\n      <li parentName=\"ul\">{`How to `}<a parentName=\"li\" {...{\n          \"href\": \"../guides/ccx_editor/edit_project/\"\n        }}>{`edit an existing project`}</a>{` in an Express editor`}</li>\n    </ul>\n    <p>{`When the editor first appears in a modal, the user will be asked to either log in, or create a Adobe Express account. Once logged in, users can access Express's huge template and asset library and start creating in a new blank project. The editor can also be spun up taking an existing project ID as input, and users can continue working on a project within the editor.`}</p>\n    <h3 {...{\n      \"id\": \"quick-actions-editor-component\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../../guides/quick_actions/index.md\"\n      }}>{`Quick Actions Editor Component`}</a></h3>\n    <ul>\n      <li parentName=\"ul\">{`How to `}<a parentName=\"li\" {...{\n          \"href\": \"../guides/quick_actions/image/\"\n        }}>{`use Image Quick Actions`}</a></li>\n      <li parentName=\"ul\">{`How to `}<a parentName=\"li\" {...{\n          \"href\": \"../guides/quick_actions/video/\"\n        }}>{`use Video Quick Actions`}</a></li>\n    </ul>\n    <p>{`Users must select the desired Quick Action (QA) so the corresponding QA editor is spun up. Within the QA Editor, users can browse their filesystem for an asset, and then perform the selected QA. They can download the modified asset to their computer, or further customize the modified asset in an Adobe Express editor.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}