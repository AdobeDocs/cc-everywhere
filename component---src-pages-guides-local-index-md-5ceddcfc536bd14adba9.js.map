{"version":3,"file":"component---src-pages-guides-local-index-md-5ceddcfc536bd14adba9.js","mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,qBADR,sBAGA,wGACA,eACE,GAAM,uBADR,wBAGA,wEACA,oBACE,eAAIC,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,cACA,eAAIA,WAAW,MAAf,qDAEF,sRAAuQ,cAAGA,WAAW,IACjR,KAAQ,wCAD2P,WAAvQ,MAGA,gDAAiC,cAAGA,WAAW,IAC3C,KAAQ,+DADqB,UAAjC,gBAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,wCAApB,yCAGA,eAAIA,WAAW,MAAf,+EAEF,eACE,GAAM,mCADR,qCAGA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,2IAA8J,cAAGA,WAAW,IACxK,KAAQ,mCADkJ,QAA9J,OAIF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,mEAAsF,cAAGA,WAAW,IAChG,KAAQ,qCAD0E,eAAtF,0BAKJ,eACE,GAAM,iCADR,mCAGA,mBAAG,cAAGA,WAAW,IACb,KAAQ,0CACP,uBAAYA,WAAW,KAAvB,WAFL,uLAGA,oBACE,eAAIA,WAAW,MAAf,qBAAyC,uBAAYA,WAAW,MAAvB,uBAAzC,UAAmH,uBAAYA,WAAW,MAAvB,sBAAnH,OACA,eAAIA,WAAW,MAAf,uDAA2E,uBAAYA,WAAW,MAAvB,qBAC3E,eAAIA,WAAW,MAAf,kDAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yBAIL,oDAAqC,uBAAYA,WAAW,KAAvB,qBAArC,eAAiH,uBAAYA,WAAW,KAAvB,iBAAjH,iIACA,eACE,GAAM,6BADR,+BAGA,mBAAG,uBAAYA,WAAW,KAAvB,eAAH,sDAAgH,uBAAYA,WAAW,KAAvB,aAAhH,MACA,uCAAwB,uBAAYA,WAAW,KAAvB,qBAAxB,QAA6F,uBAAYA,WAAW,KAAvB,4BAA7F,MACA,6FACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yEAIL,mOAAoN,uBAAYA,WAAW,KAAvB,0BAApN,MAKJJ,EAAWK,gBAAiB","sources":["webpack://dev-site-documentation-template/./src/pages/guides/local/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-everywhere/cc-everywhere/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"local-development\"\n    }}>{`Local Development`}</h1>\n    <p>{`This guide contains the steps needed to begin testing your project via localhost.`}</p>\n    <h2 {...{\n      \"id\": \"domain-restrictions\"\n    }}>{`Domain Restrictions`}</h2>\n    <p>{`CC Everywhere SDK expects requests to come from: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`express.adobe.com`}</li>\n      <li parentName=\"ul\">{`localhost`}</li>\n      <li parentName=\"ul\">{`a domain that matches registered redirect URIs `}</li>\n    </ul>\n    <p>{`You cannot just download and embed the SDK in a HTML file on your local machine and open that file in a web browser. Because of the SDK's domain restrictions, any project using the SDK must be served via localhost or a redirect URI pattern you register in `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/console/\"\n      }}>{`console`}</a>{`.`}</p>\n    <p>{`If you'd like to test the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/cc-everywhere/tree/main/sample\"\n      }}>{`sample`}</a>{`, specify: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://127.0.0.1:8000/redirect.html\"\n        }}>{`https://127.0.0.1:8000/redirect.html`}</a>{` in the \"Default Redirect URI\" field`}</li>\n      <li parentName=\"ul\">{`https://localhost:8000/redirect.html in the \"Redirect URI patterns\" field`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-0-download-npm-or-homebrew\"\n    }}>{`Step 0: Download npm or Homebrew`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`npm is a package manager used for installing Node packages. Installing Node automatically installs npm: you can download the installer `}<a parentName=\"p\" {...{\n            \"href\": \"https://nodejs.org/en/download/\"\n          }}>{`here`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Homebrew is another package installer that you can use: follow `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.brew.sh/Installation\"\n          }}>{`these steps`}</a>{` to start using it.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-1-create-ssl-certificate\"\n    }}>{`Step 1: Create SSL certificate`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/FiloSottile/mkcert\"\n      }}><inlineCode parentName=\"a\">{`mkcert`}</inlineCode></a>{` is a simple tool for making locally-trusted development certificates. It automatically installs a local CA in the system root store, and generates locally-trusted certificates. `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install it using `}<inlineCode parentName=\"li\">{`brew install mkcert`}</inlineCode>{`, NOT `}<inlineCode parentName=\"li\">{`npm install mkcert`}</inlineCode>{`. `}</li>\n      <li parentName=\"ol\">{`Configure a local certificate authority by running `}<inlineCode parentName=\"li\">{`mkcert -install`}</inlineCode></li>\n      <li parentName=\"ol\">{`Navigate back to the project folder and run:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkcert localhost \n`}</code></pre>\n    <p>{`This will generate two files: `}<inlineCode parentName=\"p\">{`localhost-key.pem`}</inlineCode>{` (key) and `}<inlineCode parentName=\"p\">{`localhost.pem`}</inlineCode>{` (certificate). Our https server is instantiated in the next step with these two files so that the browser trusts localhost.`}</p>\n    <h2 {...{\n      \"id\": \"step-2-start-local-server\"\n    }}>{`Step 2: Start local server`}</h2>\n    <p><inlineCode parentName=\"p\">{`http-server`}</inlineCode>{` lets you make files or directories available via `}<inlineCode parentName=\"p\">{`localhost`}</inlineCode>{`.`}</p>\n    <p>{`Install it using `}<inlineCode parentName=\"p\">{`npm i http-server`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`brew install http-server`}</inlineCode>{`.`}</p>\n    <p>{`To start the server at port 8000, run this line in your project root: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{` http-server -S -C ./localhost.pem -K ./localhost-key.pem -p 8000\n`}</code></pre>\n    <p>{`By passing in our newly generated SSL key and certificate, we have enabled secure request serving with TLS/SSL (HTTPS), which we need to communicate with CC Express. Now your server is up and available at `}<inlineCode parentName=\"p\">{`https://localhost:8000`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}