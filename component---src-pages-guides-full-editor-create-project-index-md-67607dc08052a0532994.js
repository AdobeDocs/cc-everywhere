"use strict";(self.webpackChunkcc_everywhere=self.webpackChunkcc_everywhere||[]).push([[2221],{66940:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return s}});var n=a(87462),r=a(63366),i=(a(15007),a(64983)),o=a(91515),d=["components"],l={},m={_frontmatter:l},p=o.Z;function s(e){var t=e.components,a=(0,r.Z)(e,d);return(0,i.mdx)(p,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"creating-new-projects-using-the-full-editor"},"Creating new projects using the full editor"),(0,i.mdx)("p",null,"This guide will demonstrate how to use the embedded full editor in your own application."),(0,i.mdx)("h2",{id:"create"},"create()"),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"create")," method starts the full editor workflow with an empty canvas."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(); \neditor.create(docConfig, appConfig, exportConfig, containerConfig); \n")),(0,i.mdx)("p",null,"All the properties are optional."),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:"left"},"Property"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Type"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"docConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/CCEverywhere/editor/index.md#createdocconfig"},"CreateDocConfig")),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Pass a custom canvas size")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"appConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/CCEverywhere/editor/index.md#baseeditorappconfig"},"BaseEditorAppConfig")),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Parameters to configure editor/modal UI")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"exportConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/types/index.md#exportoptions"},"ExportOptions"),"[]"),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Configure export options. If no export options are specified, the editor falls back to the default layout options.")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"containerConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/types/index.md#containerconfig"},"ContainerConfig")),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Properties to configure the SDK container")))),(0,i.mdx)("h2",{id:"createwithasset"},"createWithAsset()"),(0,i.mdx)("p",null,"Use ",(0,i.mdx)("inlineCode",{parentName:"p"},"createWithAsset()")," to launch the full editor with a pre-selected image or video asset."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"// Initialize the SDK first\nconst { editor } = await ccEverywhere.initialize(); \neditor.createWithAsset(docConfig, appConfig, exportConfig, containerConfig); \n")),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:"left"},"Property"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Type"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"docConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/CCEverywhere/editor/index.md#createwithassetdocconfig"},"CreateWithAssetDocConfig")),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Pass an image and custom canvas size")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"appConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/CCEverywhere/editor/index.md#baseeditorappconfig"},"BaseEditorAppConfig")),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Parameters to configure editor/modal UI")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"exportConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/types/index.md#exportoptions"},"ExportOptions"),"[]"),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Configure export options. If no export options are specified, the editor falls back to the default layout options.")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"containerConfig"),(0,i.mdx)("td",{parentName:"tr",align:"left"},(0,i.mdx)("a",{parentName:"td",href:"../../../reference/types/index.md#containerconfig"},"ContainerConfig")),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Properties to configure the SDK container")))),(0,i.mdx)("h2",{id:"example-create-new-project"},"Example: Create new project"),(0,i.mdx)("p",null,"The following code will invoke the full editor. It appears in a modal. When the user finishes in the editor and saves/publishes their design, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"onPublish")," callback is invoked. Resulting project data is sent in ",(0,i.mdx)("inlineCode",{parentName:"p"},"publishParams"),". In this example, we save the project info (",(0,i.mdx)("inlineCode",{parentName:"p"},"project_id"),") and display the image data (of the first page of the user's design) in some image container ",(0,i.mdx)("inlineCode",{parentName:"p"},"image_data"),"."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ts",metastring:'title="create-new-project.js"',title:'"create-new-project.js"'},"// Initialize the SDK first\nconst callbacks = {\n    onCancel: () => {},\n    onPublish: (intent,publishParams) => {\n        const localData = { project: publishParams.projectId, image: publishParams.asset[0].data };\n        updateImage(localData);\n    },\n    onError: (err) => {\n        console.error('Error received is', err.toString());\n    },\n};\n\nconst updateImage = (localData) => {\n    image_data.src = localData.image;\n    project_id = localData.project;\n}\n\nconst { editor } = await ccEverywhere.initialize(hostInfo, callbacks); \neditor.create();\n")),(0,i.mdx)("h2",{id:"example-create-from-asset"},"Example: Create from asset"),(0,i.mdx)("p",null,"To launch the editor with a starting asset, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"createWithAsset")," API takes a ",(0,i.mdx)("inlineCode",{parentName:"p"},"asset")," in ",(0,i.mdx)("inlineCode",{parentName:"p"},"inputParams"),". When the user finishes in the editor and saves/publishes their design, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"onPublish")," callback is invoked. Resulting project data is sent in ",(0,i.mdx)("inlineCode",{parentName:"p"},"publishParams"),". In this example, we save the project info (",(0,i.mdx)("inlineCode",{parentName:"p"},"project_id"),") and display the image data (of the first page of the user's design) in some image container ",(0,i.mdx)("inlineCode",{parentName:"p"},"image_data"),"."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ts",metastring:'title="create-from-asset.js" hl_lines="5"',title:'"create-from-asset.js"',hl_lines:'"5"'},"// Initialize the SDK first\nconst callbacks = {\n    onCancel: () => {},\n    onPublish: (intent,publishParams) => {\n        const localData = { project: publishParams.projectId, image: publishParams.asset[0].data };\n        updateImage(localData);\n    },\n    onError: (err) => {\n        console.error('Error received is', err.toString());\n    },\n};\n\nconst updateImage = (localData) => {\n    image_data.src = localData.image;\n    project_id = localData.project;\n}\n\nconst { editor } = await ccEverywhere.initialize(hostInfo, callbacks); \nlet docConfig = {\n    asset: {\n        data: base64Asset,\n        dataType: 'base64',\n        type: 'image' \n    }\n}\neditor.createWithAsset(docConfig);\n")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-full-editor-create-project-index-md-67607dc08052a0532994.js.map